const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = process.argv[2] === "production";

const result = await Bun.build({
	entrypoints: ["./src/main.ts"],
	outdir: prod ? "./build" : "/.sandbox/.obsidian/plugins/plugin",
	format: "cjs",
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
	],
	sourcemap: prod ? "none" : "inline",
	minify: prod,
	loader: {
		".json": "file",
	},
	naming: {
		asset: "[name].[ext]",
	},
	banner: prod ? banner : "",
});

if (!result.success) {
	console.error("Build failed");
	for (const message of result.logs) {
		// Bun will pretty print the message object
		console.error(message);
	}
}

export { result };
